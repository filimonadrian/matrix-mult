==29711== Cachegrind, a cache and branch-prediction profiler
==29711== Copyright (C) 2002-2017, and GNU GPL'd, by Nicholas Nethercote et al.
==29711== Using Valgrind-3.15.0-608cb11914-20190413 and LibVEX; rerun with -h for copyright info
==29711== Command: ./tema2_neopt /export/asc/tema2/input_valgrind
==29711== Parent PID: 29657
==29711== 
--29711-- 
--29711-- Valgrind options:
--29711--    --tool=cachegrind
--29711--    --branch-sim=yes
--29711--    --verbose
--29711--    --log-file=neopt.cache
--29711-- Contents of /proc/version:
--29711--   Linux version 3.10.0-327.28.3.el7.x86_64 (builder@kbuilder.dev.centos.org) (gcc version 4.8.3 20140911 (Red Hat 4.8.3-9) (GCC) ) #1 SMP Thu Aug 18 19:05:49 UTC 2016
--29711-- 
--29711-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-rdtscp-sse3-ssse3
--29711-- Page sizes: currently 4096, max supported 4096
--29711-- Valgrind library directory: /usr/libexec/valgrind
--29711-- warning: L3 cache found, using its data for the LL simulation.
--29711-- warning: specified LL cache: line_size 64  assoc 16  total_size 12,582,912
--29711-- warning: simulated LL cache: line_size 64  assoc 24  total_size 12,582,912
==29711== Cache configuration used:
==29711==   I1: 32,768 B, 4-way, 64 B lines
==29711==   D1: 32,768 B, 8-way, 64 B lines
==29711==   LL: 12,582,912 B, 24-way, 64 B lines
--29711-- Reading syms from /export/home/acs/stud/c/costel.filimon/Documents/tema2/matrix-mult/skel/tema2_neopt
--29711-- Reading syms from /usr/lib64/ld-2.17.so
--29711-- Reading syms from /usr/libexec/valgrind/cachegrind-amd64-linux
--29711--    object doesn't have a symbol table
--29711--    object doesn't have a dynamic symbol table
--29711-- Scheduler: using generic scheduler lock implementation.
==29711== embedded gdbserver: reading from /scratch/tmp/1247106.1.ibm-nehalem.q/vgdb-pipe-from-vgdb-to-29711-by-costel.filimon-on-nehalem-wn24.grid.pub.ro
==29711== embedded gdbserver: writing to   /scratch/tmp/1247106.1.ibm-nehalem.q/vgdb-pipe-to-vgdb-from-29711-by-costel.filimon-on-nehalem-wn24.grid.pub.ro
==29711== embedded gdbserver: shared mem   /scratch/tmp/1247106.1.ibm-nehalem.q/vgdb-pipe-shared-mem-vgdb-29711-by-costel.filimon-on-nehalem-wn24.grid.pub.ro
==29711== 
==29711== TO CONTROL THIS PROCESS USING vgdb (which you probably
==29711== don't want to do, unless you know exactly what you're doing,
==29711== or are doing some strange experiment):
==29711==   /usr/libexec/valgrind/../../bin/vgdb --pid=29711 ...command...
==29711== 
==29711== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==29711==   /path/to/gdb ./tema2_neopt
==29711== and then give GDB the following command
==29711==   target remote | /usr/libexec/valgrind/../../bin/vgdb --pid=29711
==29711== --pid is optional if only one valgrind process is running
==29711== 
--29711-- Reading syms from /usr/libexec/valgrind/vgpreload_core-amd64-linux.so
--29711-- Reading syms from /usr/lib64/libc-2.17.so
--29711-- REDIR: 0xffffffffff600000 (???:???) redirected to 0x5808d147 (???)
==29711== 
==29711== I   refs:      5,474,950,778
==29711== I1  misses:            1,295
==29711== LLi misses:            1,272
==29711== I1  miss rate:          0.00%
==29711== LLi miss rate:          0.00%
==29711== 
==29711== D   refs:      2,759,590,560  (2,639,432,484 rd   + 120,158,076 wr)
==29711== D1  misses:       52,020,258  (   51,949,081 rd   +      71,177 wr)
==29711== LLd misses:          113,079  (       62,023 rd   +      51,056 wr)
==29711== D1  miss rate:           1.9% (          2.0%     +         0.1%  )
==29711== LLd miss rate:           0.0% (          0.0%     +         0.0%  )
==29711== 
==29711== LL refs:          52,021,553  (   51,950,376 rd   +      71,177 wr)
==29711== LL misses:           114,351  (       63,295 rd   +      51,056 wr)
==29711== LL miss rate:            0.0% (          0.0%     +         0.0%  )
==29711== 
==29711== Branches:        121,070,250  (  120,829,617 cond +     240,633 ind)
==29711== Mispredicts:         490,738  (      490,594 cond +         144 ind)
==29711== Mispred rate:            0.4% (          0.4%     +         0.1%   )
